.. _writing-scmtools:

================
Writing SCMTools
================

Overview
========

SCMTools are the communication layer between Review Board and a code
repository. They are fairly simple classes that handle a few key operations.
Mainly:

* Fetching files (provided a name and revision)
* Determining file existence
* Normalizing diff revisions
* Determining repository validity
* Providing custom parsing of diffs for that repository

SCMTools can be provided by third-party modules and registered in such
a way where Review Board can find them.

A typical SCMTool has two classes: A SCMTool subclass, and a DiffParser
subclass. The latter is needed for any custom revision extracting for
diffs.


Defining SCMTools
=================

.. py:currentmodule:: reviewboard.scmtools.core

A SCMTool class inherits from :py:class:`reviewboard.scmtools.core.SCMTool`.
It must provide the following attributes:

* :py:attr:`name <SCMTool.name>`

And can optionally set the following attributes:

* :py:attr:`dependencies <SCMTool.dependencies>`
* :py:attr:`diff_uses_changeset_ids <SCMTool.diff_uses_changeset_ids>`
* :py:attr:`supports_authentication <SCMTool.supports_authentication>`
* :py:attr:`supports_raw_file_urls <SCMTool.supports_raw_file_urls>`
* :py:attr:`uses_atomic_revisions <SCMTool.uses_atomic_revisions>`

It must also define the methods:

* :py:meth:`get_fields <SCMTool.get_fields>`
* :py:meth:`get_file <SCMTool.get_file>`
* :py:meth:`parse_diff_revision <SCMTool.parse_diff_revision>`

And can optionally define the methods:

* :py:meth:`accept_certificate <SCMTool.accept_certificate>`
* :py:meth:`check_repository <SCMTool.check_repository>`
* :py:meth:`file_exists <SCMTool.file_exists>`
* :py:meth:`get_auth_from_uri <SCMTool.get_auth_from_uri>`
* :py:meth:`get_changeset <SCMTool.get_changeset>`
* :py:meth:`get_diffs_use_absolute_paths <SCMTool.get_diffs_use_absolute_paths>`
* :py:meth:`get_parser <SCMTool.get_parser>`
* :py:meth:`get_repository_info <SCMTool.get_repository_info>`
* :py:meth:`normalize_path_for_display <SCMTool.normalize_path_for_display>`

We provide a `class reference`_ below that covers these in detail. First,
we'll discuss the types of common SCMTools and what you may need to
implement.


.. _`class reference`:

Class References
================

SCMTool
-------

.. autoclass:: reviewboard.scmtools.core.SCMTool
   :members:


.. comment: vim: ft=rst et ts=3
